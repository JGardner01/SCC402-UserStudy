<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.Button?>
<?import javafx.scene.layout.HBox?>
<?import javafx.scene.layout.VBox?>
<?import javafx.scene.shape.Line?>
<?import javafx.scene.text.Font?>
<?import javafx.scene.text.Text?>
<?import javafx.scene.text.TextFlow?>

<HBox maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="720.0" prefWidth="1280.0" xmlns="http://javafx.com/javafx/22" xmlns:fx="http://javafx.com/fxml/1" fx:controller="scc402.userstudy.StandardAboutController">
   <children>
      <VBox maxHeight="1.7976931348623157E308" maxWidth="384.0" prefWidth="320.0" spacing="25.0">
         <children>
            <Button fx:id="backButton" maxWidth="1.7976931348623157E308" mnemonicParsing="false" onAction="#onBackButtonClick" prefHeight="100.0" prefWidth="320.0" text="Back">
               <font>
                  <Font name="Calibri" size="24.0" />
               </font>
            </Button>
         </children>
         <padding>
            <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
         </padding>
      </VBox>
      <Line endX="-105.41421508789062" endY="719.2929077148438" startX="-100.0" />
      <VBox alignment="CENTER" maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" prefHeight="720.0" prefWidth="962.0" spacing="5.0">
         <children>
            <Text strokeType="OUTSIDE" strokeWidth="0.0" text="About">
               <font>
                  <Font name="Calibri" size="34.0" />
               </font>
            </Text>
            <TextFlow prefHeight="200.0" prefWidth="200.0" textAlignment="CENTER">
               <children>
                  <Text strokeType="OUTSIDE" strokeWidth="0.0" text="In this project, we explore a predictive user interface (UI) design using graph theory to model and anticipate user intent in interactive interfaces. Error recovery is a vital component of digital systems, yet current designs donâ€™t currently offer users the ability to recover effectively from errors. Our approach uses directed graphs to develop a UI that improves error handling and user efficiency by predicting intended actions based on touch input. Specifically, our model accounts for two common error types: missed touches and delays in displaying UI changes. By analysing recognised touches and anticipating lost ones, the system enhances accuracy, reducing time spent on error recovery. We developed this user interface builder solution, guiding designers in placing elements optimally to support intent prediction. This tool has the potential to transform user interfaces within critical environments by enabling developers to create systems with inherent error resilience without requiring machine learning.">
                     <font>
                        <Font name="Calibri" size="18.0" />
                     </font>
                  </Text>
               </children>
               <padding>
                  <Insets bottom="15.0" left="15.0" right="15.0" top="10.0" />
               </padding>
            </TextFlow>
         </children>
         <padding>
            <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
         </padding>
      </VBox>
   </children>
</HBox>
